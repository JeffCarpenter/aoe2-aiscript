---
name: Age Of Empires II (AI)
scopeName: source.aoe2ai
fileTypes: [per]
variables:
    relOp: (less-than|greater-than|equal|not-equal|less-or-equal|greater-or-equal|\>|\>|\<|\=\=|\>\=|\<\=|\!\=)
patterns:
    -
        include: '#keywords'
    -
        include: '#strings'
    -
        include: '#comment'
    -
        include: '#constant'
    -
        include: '#statements'

repository:
    keywords:
        patterns:
            -
                name: keyword.control.aoe2ai
                match: \b(defrule|\=\>)\b
            -
                name: keyword.operator.aoe2ai
                match: '{{relOp}}'
    invalid:
        patterns:
            -
                name: invalid.illegal.aoe2ai
                match: (\+)
    statements:
        patterns:
            -
                begin: (^(\\())defrule((\n((\\(([A-Za-z0-9\\-]+) ([A-Za-z0-9\\-]+)  ([0-9]{1,5})(\\)))|(\\(([A-Za-z0-9\\-]+) ([A-Za-z0-9\\-]+)(\\)))))+)
                end: (\n)(\\=\\>)((\n(\\(([A-Za-z0-9\\-]+) ([A-Za-z0-9\\-]+)(\\))))+)(\n)(\\))
                name: keyword.control.conditional.aoe2ai
    strings:
        name: string.quoted.double.aoe2ai
        begin: '"'
        end: '"'
        patterns:
            -
                name: constant.character.escape.aoe2ai
                match: \\.
    comment:
        patterns:
            -
                name: comment.line.aoe2ai
                begin: '(;)(.*)'
                end: "$\n?"
                beginCaptures:
                    '0': {name: comment.line.character.aoe2ai}
                    '1': {name: punctuation.definition.comment.aoe2ai}
    constant:
        patterns:
            -
                name: constant.numeric.aoe2ai
                match: '(\-*)([0-9]{1,5})'
            -
                name: constant.language.aoe2ai
                match: (true|false)
